buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
  }
}

plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

apply plugin: "base"
apply plugin: "com.moowork.node"

group = 'com.taskagile'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
     implementation 'org.springframework.boot:spring-boot-starter-validation'

     compileOnly 'org.projectlombok:lombok:1.18.2'
     compile 'org.postgresql:postgresql:42.2.14'
     compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

     // Chapter.10 Security Dependencies

     compile 'org.springframework.boot:spring-boot-starter-security'
     testCompile 'org.springframework.security:spring-security-test'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
     testCompile group: 'junit', name: 'junit', version: '4.13'
     testCompile 'com.h2database:h2:1.4.200'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
          exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
     }
}

test {
	useJUnitPlatform()
}

node {
  version '14.4.0'
  npmVersion '6.14.5'
  workDir = file('./front-end')
  npmWorkDir = file('./front-end')
  nodeModulesDir = file('./front-end')
}

task setUp(type: NpmTask) {
  description = "Install Node.js packages"
  args = ['install']
  inputs.files file('package.json')
  outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
  description "Build Front-End"
  args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'
